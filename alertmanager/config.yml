global:
#  resolve_timeout: 5m
  slack_api_url: ''

route:
  receiver: 'slack-notifications'

# To aggregate by all possible labels use the special value '...' as the sole label name, for example:
# group_by: ['...']
# This effectively disables aggregation entirely, passing through all
# alerts as-is. This is unlikely to be what you want, unless you have
# a very low alert volume or your upstream notification system performs
# its own grouping.
#  group_by: ['']

# How long to initially wait to send a notification for a group
# of alerts. Allows to wait for an inhibiting alert to arrive or collect
# more initial alerts for the same group. (Usually ~0s to few minutes.)
#  group_wait: 30s

# How long to wait before sending a notification about new alerts that
# are added to a group of alerts for which an initial notification has
# already been sent. (Usually ~5m or more.)
#  group_interval: 5s

# How long to wait before sending a notification again if it has already
# been sent successfully for an alert. (Usually ~3h or more).
#  repeat_interval: 4h

receivers:
  - name: 'slack-notifications'
    slack_configs:
      - channel: '#alert-grafana'
        send_resolved: true
        text: '{{ .CommonAnnotations.description }}'
